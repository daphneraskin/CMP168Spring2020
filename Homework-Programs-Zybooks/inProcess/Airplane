
public class Airplane {
	private Passenger[] passengers;
	private String airplaneName;
	private int numPassengers;
	
	public Airplane() {
		airplaneName = "";
		numPassengers = 0;
		passengers = new Passenger[100];
	}
	public Airplane(int maxPassengers) {
		if (maxPassengers<0) {
			maxPassengers = 0;
		}
		passengers = new Passenger[maxPassengers];
		airplaneName = "";
		numPassengers = 0;
	}
	public Airplane(String airplaneName) {
		this.airplaneName = airplaneName;
		numPassengers = 0;
		passengers = new Passenger[100];
	}
	public Airplane(String airplaneName, int maxPassengers) {
		this.airplaneName = airplaneName;
		if (maxPassengers<0) {
			maxPassengers = 0;
		}
		passengers = new Passenger[maxPassengers];
		numPassengers = 0;
	}
	public void addPassenger(Passenger a) {
		if (numPassengers + 1 <= passengers.length){
			passengers[numPassengers] = a;
			numPassengers++;
		}
	}
	
	public void resizePassengerArray(Passenger[] passenger){
		passengers = new Passenger[passenger.length *2];
	}
	
	public Passenger getFirstPassenger() {
		if (passengers.length >= 0) {
			return passengers[0];
		}
		else {
			return null;
		}
	}
	
	public String getAirplaneName() {
		return airplaneName;
	}
	
	public double getTotalWeightOfAllPassengers() {
		double total = 0.0;
		for (int i = 0; i < numPassengers; i++) {
			Passenger a = passengers[i];
			total += a.getWeight();
		}
		return total;
	}
	
	public double getAverageWeightOfAllPassengers() {
		double average = getTotalWeightOfAllPassengers() / passengers.length;
		return average;
	}
	
	public Passenger getPassenger(int index) {
		if (index > 0 && index < passengers.length && passengers[index] != null) {
			return passengers[index];
		}
		else {
			return null;
		}
	}
	
	public Passenger[] getPassengers() {
		return passengers;
		}
		
	
	public Passenger getLastPassenger() {
		return passengers[numPassengers-1];
	}
	
	public int getNumberOfPassengersAboveWeight(double weight) {
		int count = 0;
		for (int i = 0; i<passengers.length; i++) {
			if (passengers[i].getWeight() > weight) {
				count += 1;
			}
		}
		return count;
	}
	
	public int getNumberOfPassengersBelowWeight(double weight) {
		int count = 0;
		for (int i = 0; i< passengers.length; i++) {
			if (passengers[i].getWeight() < weight) {
				count += 1;
			}
		}
		return count;
	}
	
	public int getNumPassengers() {
		return numPassengers;
	}
	
	public void setAirplaneName(java.lang.String name) {
		airplaneName = name;
	}
	
	public Passenger removePassenger(int index) {
	
		if (index>= 0 && index < numPassengers) {
			
			return null;
		}
		else{
			for (int i = index; i<numPassengers - 1; i++) {
				passengers[i] = passengers[i + 1];
			}
			numPassengers--;
			return passengers[index];
		}
		
		
	}
	
	public void removeAllPassengers() {
		for (int i = 0; i<numPassengers; i++) {
			passengers[i] = null;
		}
		numPassengers = 0;
	}
	
	public void increaseWeightOfAllPassengers(){
		for (int i = 0; i<numPassengers; i++){
			passengers[i].gainWeight();
		}
	}
	public void increaseWeightOfAllPassengers(double weight) {
		for (int i = 0; i<numPassengers; i++) {
			Passenger a = passengers[i];
			a.gainWeight(weight);
		}
	}
	
	public void printAllDetails() {
		System.out.printf("AirplaneName: %20s | Number of Passengers: %4d | Airplane Size: %4d\n", airplaneName, numPassengers, passengers.length);
		for (int i = 0; i< numPassengers; i++){
			passengers[i].printDetails();
		}
	}

	
	public static void main(String[] args){
		Passenger emma = new Passenger("Emma", 2020, 0.0, 'f', 1);
		Passenger dylan = new Passenger("Dylan", 2020, 0.0, 'f', 2);
		Passenger carry = new Passenger("Carry", 2020, 1.2, 'f', 3);

		Airplane a = new Airplane();
		a.addPassenger(emma);
		a.addPassenger(dylan);
		a.addPassenger(carry);
		/*a.increaseWeightOfAllPassengers(10);
		a.printAllDetails();
		System.out.print(a.getLastPassenger());
		for (int i = 0; i<a.passengers.length; i++){
			a.printAllDetails();
			}
			*/
		a.increaseWeightOfAllPassengers(10);
		System.out.println(a.getTotalWeightOfAllPassengers());
		a.increaseWeightOfAllPassengers(20.5);
		System.out.println(a.getTotalWeightOfAllPassengers());
		a.removeAllPassengers();
		a.printAllDetails();
	}
}

