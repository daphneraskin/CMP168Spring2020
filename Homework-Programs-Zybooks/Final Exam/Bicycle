
public class Bicycle extends Vehicle implements Comparable<Bicycle> {

	private double weight;
	public static int[] seats = {1};
	//public static double ACCURACY_RANGE = 0.5;
	
	public Bicycle() {
		super(1, 1);
		weight = 0.0;
	}
	
	public Bicycle(Person driver) {
		super(driver, seats);
		weight = 0.0;
	}
	
	public Bicycle(Person driver, double w) {
		super(driver, seats);
		if (w <0) {
			weight = 0;
		}
		else {
			weight = w;
		}
	}
	
	public double getWeight() {
		return weight;
	}
	
	public void setWeight(double w) {
		if (w> 0) {
			weight = w;
		}
		else {
			weight = 0;
		}
	}		
			
	
	@Override
	public void setDriver(Person p) throws InvalidDriverException{
		if (!(p.hasDriverLicense()) && p.getAge()<3) {
			throw new InvalidDriverException();
		}
		else {
			personsOnBoard[0][0] = p;
		}
	}
	
	@Override
	public boolean equals(Object obj) {
		if (obj instanceof Bicycle) {
			Bicycle a = (Bicycle)obj;
			if(Math.abs(weight - a.getWeight()) <= 0.5) {
				return true;
			}
			else {
				return false;
			}
		}
		else {
			return false;
		}
	}
	

	@Override
	public int compareTo(Bicycle o) {
		
		if (this.weight - o.getWeight() <=  .5 || this.weight - o.getWeight() >= -.5) {
			return 0;
		}
		else if (this.weight  - o.getWeight() > .5) {
			return 1;
		}
		else {
			return -1;
		}
	}

	@Override
	public boolean loadPassenger(Person p) {
		return false;
	}

	@Override
	public int loadPassengers(Person[] peeps) {
		return 0;
	}
	
	@Override
	public String toString() {
		String a = "Bicycle [ rider= " + getDriver().getName() + " | weight= " + weight + " ]";
		return a;
	}

	
	public static void main(String[] args) {
		Person person = new Person("Daphne", true, 18, 65);
		Bicycle a = new Bicycle(person);
		Bicycle b = new Bicycle(person);
		System.out.println(a.getWeight());
		System.out.println(b.getWeight());
		System.out.println(a.compareTo(b));
	}
}
